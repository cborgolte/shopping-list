{"version":3,"sources":["webpack:///./src/app/shopping-list.service.ts","webpack:///./src/app/account/account.service.ts","webpack:///./src/app/account/account-sign-in.component.ts","webpack:///./src/app/shopping-list-modify.component.ts","webpack:///./src/app/shopping-list.component.ts","webpack:///./src/app/shopping-list-modify.component.css","webpack:///./src async","webpack:///./src/main.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/line-item.ts","webpack:///./src/environments/environment.ts","webpack:///./src/polyfills.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/account/account-sign-in.component.html","webpack:///./src/app/app.component.html","webpack:///./src/app/shopping-list-modify.component.html","webpack:///./src/app/shopping-list.component.html"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["import {Injectable, Component, NgZone} from '@angular/core';\nimport {DragulaService} from 'ng2-dragula/ng2-dragula';\nimport { LineItem } from './line-item';\n\nconst _window: any = (<any>window);\nconst hoodie: any = _window.hoodie;\n\n@Injectable()\nexport class ShoppingListService {\n  lineItems: LineItem[] = [];\n\n  constructor(zone: NgZone, private dragulaService: DragulaService) {\n\n    const li = this.lineItems; // alias\n\n    dragulaService.drop.subscribe((value) => {\n      this.onDrop(value);\n    });\n\n\n    hoodie.ready.then( () => {\n\n        function init(items: any[]) {\n          li.length = 0; // clear the array\n          let dbItems = items.filter( (element, index, array) => {\n            let retval = element.type === 'LineItem';\n            return retval;\n          }).sort((lhs, rhs) => lhs.pos - rhs.pos);\n\n          zone.run( () =>\n            // merge dbItems in (empty) li\n            Array.prototype.push.apply(li, dbItems)\n          );\n        }\n\n        function dbHasChanged() {\n          hoodie.store.findAll().then(init);\n        }\n\n        // initalize db\n        dbHasChanged();\n\n        //// Events\n\n        // Handle store changes\n        hoodie.store.on('change', dbHasChanged);\n\n        // Load new user's data after a new user signs in\n        hoodie.account.on('signin', (accountProperties) => {\n          init([]);\n        });\n\n        // Clear data after a user signs out\n        hoodie.account.on('signout', (accountProperties) => {\n          init([]);\n        });\n\n      }\n    );\n  }\n\n  private db_addLineItem(lineItem: LineItem): void {\n    const lineItemRepr = (<any>lineItem);\n    lineItemRepr.type = 'LineItem';\n    hoodie.store.add(lineItemRepr).then(function(){\n    });\n  }\n\n  private db_updateLineItem(lineItem: LineItem): void {\n    const lineItemRepr = (<any>lineItem);\n    hoodie.store.update(\n      lineItemRepr.id,\n      lineItem\n    );\n  }\n\n  private db_updateLineItems(lineItems: LineItem[]): void {\n    const lineItemsRepr = (<any[]>lineItems);\n    hoodie.store.update(lineItemsRepr);\n  }\n\n  private db_deleteLineItem(lineItem: LineItem) {\n    const lineItemRepr = (<any>lineItem);\n    hoodie.store.remove({id: lineItemRepr.id});\n  }\n\n  private onDrop(args: any[]) {\n    // since lineItems are the model of the dragula container,\n    //  they are in correct order now. That is,\n    //  we have to persist this new order here.\n    let dbItems = this.lineItems.map((lineItem: LineItem, pos: number, array: LineItem[]) => {\n      if (pos != lineItem.pos) {\n        lineItem.pos = pos;\n        return lineItem;\n      }\n      return null;\n    }).filter((lineItem: LineItem, pos: number, array: LineItem[]) => {return lineItem != null});\n    this.db_updateLineItems(dbItems);\n  }\n\n\n  getLineItems(): LineItem[] {\n    return this.lineItems;\n  }\n\n  createLineItem(name: string, qty: number, selected: boolean): LineItem {\n    const lineItem = new LineItem();\n    lineItem.pos = this.lineItems.length;\n    lineItem.qty = qty;\n    lineItem.name = name;\n    lineItem.selected = selected;\n    this.db_addLineItem(lineItem);\n    return lineItem;\n  }\n\n  updateLineItem(item: LineItem) {\n    this.db_updateLineItem(item);\n  }\n\n  removeItem(item: LineItem) {\n    this.db_deleteLineItem(item);\n  }\n\n  resetLineItems(lineItems: LineItem[]) {\n    let items = lineItems.map((item) => {\n      item.bought = false;\n      item.selected = false;\n      return item;\n    });\n    this.db_updateLineItems(items);\n  }\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shopping-list.service.ts","import {Injectable, Component, NgZone} from '@angular/core';\n\n// HACK: Get a handle to the hoodie client\nconst _window: any = (<any>window);\nconst hoodie: any = _window.hoodie;\n\n@Injectable()\nexport class AccountService {\n\n    private account: any = {}\n\n    constructor(private zone: NgZone) { \n        hoodie.ready.then( () => {\n            if (hoodie.account.isSignedIn()) {\n                this.setUser(hoodie.account.username);\n            }\n            else {\n                this.clearUser();\n            }\n        });\n  }\n\n  private setUser(username: string) {\n      this.zone.runOutsideAngular( () => {\n          this.account.username = username;\n          this.account.logged_in = true;\n          console.log(this.account);\n      });\n  }\n\n  private clearUser() {\n      this.zone.runOutsideAngular( () => {\n          this.account.username = \"\";\n          this.account.logged_in = false;\n          // for (let attr in this.account) {\n          //     delete (this.account[attr]);\n          // }\n      });\n  }\n\n  public signIn(username: String, password: String): any {\n\n      let options = { username: username, password: password };\n        return hoodie.account.signIn(options)\n            .then((sessionProp) => {\n                console.log(\"logged in as \" + sessionProp.username);\n                this.setUser(sessionProp.username);\n            })\n            .catch((error) => {\n                console.log(\"log in failed \" + error);\n            });\n    }\n\n  public getAccount(): any {\n      return this.account;\n  }\n\n  public signOut(): void {\n      hoodie.account.signOut().then(() => {\n          this.clearUser();\n      });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/account/account.service.ts","import { Component } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { AccountService } from './account.service';\n\n\n@Component({\n    selector: 'sign-in',\n    templateUrl: './account-sign-in.component.html',\n    providers: [AccountService]\n})\nexport class AccountSignInComponent {\n\n    // ngModel\n    account = {\n        username: \"\",\n        password: \"\",\n    };\n\n    constructor(\n        private accountService: AccountService,\n        private router: Router,\n        private route: ActivatedRoute\n    ) { }\n\n    signIn(): void {\n        console.log(this.account);\n        this.accountService.signIn(this.account.username, this.account.password)\n        .then( () => {\n            // TODO: check for redirect URL in query parameters\n            this.router.navigate([\"/modify\"]);\n        });\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/account/account-sign-in.component.ts","import { Component } from '@angular/core';\nimport { LineItem } from './line-item';\nimport { ShoppingListService } from './shopping-list.service';\n\n@Component({\n  selector: 'shopping-list-modify',\n  templateUrl: './shopping-list-modify.component.html',\n  styleUrls: ['./shopping-list-modify.component.css'],\n  providers: [ShoppingListService]\n})\nexport class ShoppingListModifyComponent {\n  title = 'Modify Shopping List';\n  lineItems = null;\n\n  constructor(private shoppingListService: ShoppingListService) { \n    this.lineItems = shoppingListService.getLineItems();\n    console.log('LineItems', JSON.stringify(this.lineItems));\n  }\n\n  // handle entering a new item\n  onEnter(input: any) {\n    let value = input.value;\n    let amount = parseInt(value.split(' ', 1));\n    if (!isNaN(amount)) {\n      let valueSplitted = value.split(' ');\n      value = valueSplitted.slice(1).join(' ');\n    }\n    else {\n      amount = 1;\n    }\n    this.shoppingListService.createLineItem(value, amount, true);\n    // clear input\n    input.value = \"\";\n  }\n\n  // decrease item quantity\n  decrease(item: LineItem) {\n    const minValue = 1;\n    if (item.qty > minValue) {\n      item.qty -= 1;\n    }\n    this.shoppingListService.updateLineItem(item);\n  }\n  \n  // increase item quantity\n  increase(item: LineItem) {\n    if (item.qty === undefined || item.qty === null) {\n      item.qty = 0;\n    }\n    item.qty += 1;\n    this.shoppingListService.updateLineItem(item);\n  }\n\n  // remove item from list\n  remove(item: LineItem) {\n    this.shoppingListService.removeItem(item);\n  }\n\n  // track items\n  trackLineItems(index: number, lineItem: LineItem) { \n    const lineItemRepr = (<any>lineItem);\n    return lineItemRepr.id;\n   }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shopping-list-modify.component.ts","import { Component } from '@angular/core';\nimport { LineItem } from './line-item';\nimport { ShoppingListService } from './shopping-list.service';\n\n@Component({\n  selector: 'shopping-list',\n  templateUrl: './shopping-list.component.html',\n  styleUrls: ['./shopping-list-modify.component.css'],\n  providers: [ShoppingListService]\n})\nexport class ShoppingListComponent {\n  title = 'Shopping List';\n  private lineItems = null;\n\n  constructor(private shoppingListService: ShoppingListService) {\n    this.lineItems = shoppingListService.getLineItems();\n  }\n\n  // return line items that were selected for the shopping list\n  getLineItems(): LineItem[] {\n    return this.lineItems.filter((item: LineItem) => item.selected);\n  }\n\n  // track items\n  trackLineItems(index: number, lineItem: LineItem) {\n    const lineItemRepr = (<any>lineItem);\n    return lineItemRepr.id;\n  }\n\n  // done - clear bought items from list\n  done() {\n    let bought = this.lineItems.filter((item: LineItem) => item.bought);\n    this.shoppingListService.resetLineItems(bought);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shopping-list.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shopping-list-modify.component.css\n// module id = 487\n// module chunks = 0","function webpackEmptyContext(req) {\n\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 500;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src async\n// module id = 500\n// module chunks = 0","import './polyfills.ts';\n\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\nimport { enableProdMode } from '@angular/core';\nimport { environment } from './environments/environment';\nimport { AppModule } from './app/app.module';\n\nif (environment.production) {\n  enableProdMode();\n}\n\n// const _window: any = (<any>window);\n// const hoodie = _window.hoodie;\n// \n// hoodie.ready.then(function() {platformBrowserDynamic().bootstrapModule(AppModule);});\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts","import { NgModule }             from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { ShoppingListModifyComponent }  from './shopping-list-modify.component';\nimport { ShoppingListComponent }  from './shopping-list.component';\nimport { AccountSignInComponent }  from './account/account-sign-in.component';\n\nconst routes: Routes = [\n  { path: '', redirectTo: '/modify', pathMatch: 'full' },\n  { path: 'modify',  component: ShoppingListModifyComponent },\n  { path: 'shop',  component: ShoppingListComponent },\n  { path: 'log-in',  component: AccountSignInComponent },\n];\n\n@NgModule({\n  imports: [ RouterModule.forRoot(routes) ],\n  exports: [ RouterModule ]\n})\nexport class AppRoutingModule {}\n\n\n// WEBPACK FOOTER //\n// ./src/app/app-routing.module.ts","import { Component } from '@angular/core';\nimport { LineItem } from './line-item';\nimport { ShoppingListService } from './shopping-list.service';\nimport { AccountService } from './account/account.service';\nimport {DragulaService} from 'ng2-dragula/ng2-dragula';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n  viewProviders: [DragulaService],\n  providers: [ShoppingListService, AccountService]\n})\nexport class AppComponent {\n\n  private user: any;\n  constructor(private accountService: AccountService) {\n    this.user = accountService.getAccount();\n    window['UUUUU'] = this.user;\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpModule } from '@angular/http';\nimport { MaterialModule } from '@angular/material';\nimport 'hammerjs';\n\nimport { AppComponent } from './app.component';\nimport { AppRoutingModule }   from './app-routing.module';\nimport { ShoppingListService } from './shopping-list.service';\nimport { AccountService } from './account/account.service';\nimport { AccountSignInComponent }  from './account/account-sign-in.component';\nimport { ShoppingListComponent }  from './shopping-list.component';\nimport { ShoppingListModifyComponent } from './shopping-list-modify.component';\nimport {DragulaModule, DragulaService} from 'ng2-dragula/ng2-dragula';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ShoppingListModifyComponent,\n    ShoppingListComponent,\n    AccountSignInComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpModule,\n    MaterialModule.forRoot(),\n    AppRoutingModule,\n    DragulaModule\n  ],\n  providers: [ShoppingListService, AccountService, DragulaService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","\nexport class LineItem {\n  pos: number;\n  qty: number;\n  // unit: string;\n  name: string;\n  selected: boolean;\n  bought: boolean;\n  // categories: Array<string>;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/line-item.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts","// This file includes polyfills needed by Angular and is loaded before\n// the app. You can add your own extra polyfills to this file.\nimport 'core-js/es6/symbol';\nimport 'core-js/es6/object';\nimport 'core-js/es6/function';\nimport 'core-js/es6/parse-int';\nimport 'core-js/es6/parse-float';\nimport 'core-js/es6/number';\nimport 'core-js/es6/math';\nimport 'core-js/es6/string';\nimport 'core-js/es6/date';\nimport 'core-js/es6/array';\nimport 'core-js/es6/regexp';\nimport 'core-js/es6/map';\nimport 'core-js/es6/set';\nimport 'core-js/es6/reflect';\n\nimport 'core-js/es7/reflect';\nimport 'zone.js/dist/zone';\n\n\n\n// WEBPACK FOOTER //\n// ./src/polyfills.ts","module.exports = \"nav a:visited {\\n  color: black;\\n}\\nnav a.active {\\n  color: #039be5;\\n}\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.css\n// module id = 826\n// module chunks = 0","module.exports = \"<md-card>\\n    <md-card-title>Sign in</md-card-title>\\n    <md-card-content>\\n        <md-input-container>\\n            <input mdInput [(ngModel)]=\\\"account.username\\\" placeholder=\\\"username\\\" value=\\\"\\\">\\n        </md-input-container>\\n        <md-input-container>\\n            <input mdInput [(ngModel)]=\\\"account.password\\\" type=\\\"password\\\" placeholder=\\\"password\\\" value=\\\"\\\">\\n        </md-input-container>\\n        <button (click)=\\\"signIn()\\\" md-button>Submit</button>\\n    </md-card-content>\\n</md-card>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/account/account-sign-in.component.html\n// module id = 827\n// module chunks = 0","module.exports = \"<md-toolbar>\\n    <nav>\\n        <a routerLink=\\\"/modify\\\" routerLinkActive=\\\"active\\\">\\n            <md-icon>mode edit</md-icon></a>\\n        <a routerLink=\\\"/shop\\\" routerLinkActive=\\\"active\\\">\\n            <md-icon>store</md-icon></a>\\n    </nav>\\n    <span class=\\\"spacer\\\"></span>\\n    <span class=\\\"user\\\">Hi <strong>{{user.username || \\\"-\\\"}}</strong>&nbsp;|&nbsp;</span>\\n    <nav>\\n        <a *ngIf=\\\"!user.logged_in\\\" routerLink=\\\"/log-in\\\" routerLinkActive=\\\"active\\\">Sign in</a>\\n        <a *ngIf=\\\"user.logged_in\\\" (click)=\\\"accountService.signOut()\\\">Sign out</a>\\n        <a *ngIf=\\\"!user.logged_in\\\" routerLink=\\\"/sign-up\\\" routerLinkActive=\\\"active\\\">Sign up</a>\\n    </nav>\\n</md-toolbar>\\n<router-outlet></router-outlet>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.html\n// module id = 828\n// module chunks = 0","module.exports = \"<md-card>\\n    <md-card-content>\\n        <md-list [dragula]='\\\"bag-one\\\"' [dragulaModel]='lineItems'>\\n            <md-list-item *ngFor=\\\"let item of lineItems; trackBy: trackLineItems\\\" layout=\\\"row\\\">\\n                <md-checkbox [(ngModel)]=\\\"item.selected\\\" (click)=\\\"shoppingListService.updateLineItem(item)\\\">\\n                    <span class=\\\"qty\\\">{{item.qty}}</span>\\n                    <span class=\\\"item\\\">{{item.name}}</span>\\n                </md-checkbox>\\n                <div class=\\\"button-list\\\" flex>\\n                    <button md-icon-button (click)=\\\"decrease(item)\\\">\\n                        <md-icon>remove</md-icon>\\n                    </button>\\n                    <button md-icon-button (click)=\\\"increase(item)\\\">\\n                        <md-icon>add</md-icon>\\n                    </button>\\n                    <button md-icon-button (click)=\\\"remove(item)\\\">\\n                        <md-icon>delete</md-icon>\\n                    </button>\\n                </div>\\n                <md-divider ng-if=\\\"!$last\\\"></md-divider>\\n            </md-list-item>\\n        </md-list>\\n        <md-divider></md-divider>\\n        <section>\\n            <md-input-container>\\n                <input mdInput (keyup.enter)=\\\"onEnter(box)\\\" #box placeholder=\\\"add item\\\" value=\\\"\\\">\\n            </md-input-container>\\n        </section>\\n    </md-card-content>\\n</md-card>\\n<!-- <pre>{{lineItems|json}}</pre> -->\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shopping-list-modify.component.html\n// module id = 829\n// module chunks = 0","module.exports = \"<md-card>\\n    <md-card-content>\\n        <md-list [dragula]='\\\"bag-one\\\"' [dragulaModel]='lineItems'>\\n            <md-list-item *ngFor=\\\"let item of getLineItems(); trackBy: trackLineItems\\\" layout=\\\"row\\\">\\n                <md-checkbox [(ngModel)]=\\\"item.bought\\\" (click)=\\\"shoppingListService.updateLineItem(item)\\\">\\n                    <span class=\\\"qty\\\">{{item.qty}}</span>\\n                    <span class=\\\"item\\\">{{item.name}}</span>\\n                </md-checkbox>\\n                <md-divider></md-divider>\\n            </md-list-item>\\n        </md-list>\\n        <section>\\n            <button (click)=\\\"done()\\\" md-button>done</button>\\n        </section>\\n    </md-card-content>\\n</md-card>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shopping-list.component.html\n// module id = 830\n// module chunks = 0"],"sourceRoot":""}